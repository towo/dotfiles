# Set up XDG-specified dotfiles for any program where you can shoehorn it into.

# Check for existence of the XDG vars
for xdg_var in XDG_CONFIG_HOME XDG_DATA_HOME XDG_CACHE_HOME XDG_RUNTIME_DIR XDG_BIN_HOME XDG_LIB_HOME; do
	if [ -z "$$xdg_var" ]; then
		echo "\$$xdg_var is empty, aborting $0"
		exit 1
	fi
done

export ANDROID_SDK_HOME="${XDG_CONFIG_HOME}/android"
export AWS_CONFIG_FILE="${XDG_CONFIG_HOME}/aws/config"
export AWS_SHARED_CREDENTIALS_FILE="${XDG_CONFIG_HOME}/aws/credentials"
export CARGO_HOME="${XDG_DATA_HOME}/cargo"
# export DOCKER_CERT_PATH="${XDG_CONFIG_HOME}/docker"
export DOCKER_CONFIG="${XDG_CONFIG_HOME}/docker"
export EYAML_CONFIG="${XDG_CONFIG_HOME}/eyaml/config.yaml"
export FPP_DIR="${XDG_RUNTIME_DIR}/fpp/"
# export GEM_HOME="${XDG_LIB_HOME}/gem/ruby/$(ruby -e 'print RUBY_VERSION')/"
export GEM_HOME="${XDG_LIB_HOME}/gem"
export GEM_SPEC_CACHE="${XDG_CACHE_HOME}/gem"
export GEMRC="${XDG_CONFIG_HOME}/gem/rc"
export GIMP2_DIRECTORY="${XDG_CONFIG_HOME}/GIMP"
export GNUPGHOME="${XDG_CONFIG_HOME}/gnupg"
export GOPATH="${XDG_DATA_HOME}/go"
export GRAMPSHOME="${XDG_DATA_HOME}/gramps"
export GRADLE_USER_HOME="${XDG_DATA_HOME}/gradle"
export GTK2_RC_FILES="${XDG_CONFIG_HOME}/gtk-2.0/gtkrc"
export GVIMINIT=":source ${XDG_CONFIG_HOME}/vim/gvimrc"
export LESSHISTFILE="${XDG_CACHE_HOME}/less/history"
export MPLAYER_HOME="${XDG_CONFIG_HOME}/mplayer"
export MYSQL_HISTFILE="$XDG_CACHE_HOME/mysql_history"
export PASSWORD_STORE_DIR="${XDG_DATA_HOME}/password-store"
export PERL5LIB="$HOME/.local/lib/perl5${PERL5LIB+:}${PERL5LIB}"
export PERL_CPANM_OPT="-l $HOME/.local"
export PERL_LOCAL_LIB_ROOT="$HOME/.local${PERL_LOCAL_LIB_ROOT+:}${PERL_LOCAL_LIB_ROOT}"
export PERL_MB_OPT="--install_base \"$HOME/.local\""
export PERL_MM_OPT="INSTALL_BASE=$HOME/.local"
export TASKDATA="${XDG_DATA_HOME}/task"
export TASKRC="${XDG_CONFIG_HOME}/task/taskrc"
export TEXMFHOME="${XDG_DATA_HOME}/texmf"
export TIMEWARRIORDB="${XDG_CONFIG_HOME}/timewarrior"
export TERMINFO="${XDG_DATA_HOME}/terminfo"
export VAGRANT_DOTFILE_PATH="${XDG_CACHE_HOME}/vagrant"
export VAGRANT_HOME="${XDG_DATA_HOME}/vagrant"
export VBOX_USER_HOME="${XDG_DATA_HOME}/vagrant"
export VCSH_GITIGNORE_D="${XDG_CONFIG_HOME}/vcsh/gitignore.d"
export VCSH_GITATTRIBUTES_D="${XDG_CONFIG_HOME}/vcsh/gitattributes.d"
export VIMINIT=":source ${XDG_CONFIG_HOME}/vim/vimrc"
if [[ -e "${XDG_CONFIG_HOME}/wgetrc" ]]; then
	export WGETRC="${XDG_CONFIG_HOME}/wgetrc"
fi
export npm_config_cache="${XDG_CACHE_HOME}/npm"
export npm_config_devdir="${XDG_DATA_HOME}/node-gyp"
export npm_config_userconfig="${XDG_CONFIG_HOME}/npm/npmrc"
